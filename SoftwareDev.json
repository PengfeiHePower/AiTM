[
    {
        "task id": 0,
        "task": "Snake_game",
        "prompt": "Create a snake game."
    },
    {
        "task id": 1,
        "task": "Brick_breaker_game",
        "prompt": "Create a brick breaker game."
    },
    {
        "task id": 2,
        "task": "2048_game",
        "prompt": "Create a 2048 game for the web."
    },
    {
        "task id": 3,
        "task": "Flappy_bird_game",
        "prompt": "Write p5.js code for Flappy Bird where you control a yellow bird continuously flying between a series of green pipes. The bird flaps every time you left click the mouse. If it falls to the ground or hits a pipe, you lose. This game goes on indefinitely until you lose; you get points the further you go."
    },
    {
        "task id": 4,
        "task": "Tank_battle_game",
        "prompt": "Create a tank battle game."
    },
    {
        "task id": 5,
        "task": "Excel_data_process",
        "prompt": "Write an excel data processing program based on streamlit and pandas. The screen first shows an excel file upload button. After the excel file is uploaded, use pandas to display its data content. The program is required to be concise, easy to maintain, and not over-designed. It uses streamlit to process web screen displays, and pandas is sufficient to process excel reading and display. Please make sure others can execute directly without introducing additional packages."
    },
    {
        "task id": 6,
        "task": "CRUD_manage",
        "prompt": "Write a management program based on the crud addition, deletion, modification and query processing of the customer business entity. The customer needs to save this information: name, birthday, age, sex, and phone. The data is stored in client.db, and there is a judgement whether the customer table exists. If it doesn’t, it needs to be created first. Querying is done by name; same for deleting. The program is required to be concise, easy to maintain, and not over-designed. The screen is realized through streamlit and sqlite—no need to introduce other additional packages."
    },
    {
        "task id": 7,
        "task": "Music_transcriber",
        "prompt": "Develop a program to transcribe sheet music into a digital format; providing error-free transcribed symbolized sheet music intelligence from audio through signal processing involving pitch and time slicing then training a neural net to run Onset Detected CWT transforming scalograms to chromagrams decoded with Recursive Neural Network focused networks."
    },
    {
        "task id": 8,
        "task": "Custom_press_releases",
        "prompt": "Create custom press releases; develop a Python script that extracts relevant information about company news from external sources, such as social media; extract update interval database for recent changes. The program should create press releases with customizable options and export writings to PDFs, NYTimes API JSONs, media format styled with interlink internal fixed character-length metadata."
    },
    {
        "task id": 9,
        "task": "Gomoku_game",
        "prompt": "Implement a Gomoku game using Python, incorporating an AI opponent with varying difficulty levels."
    },
    {
        "task id": 10,
        "task": "Weather_dashboard",
        "prompt": "Create a Python program to develop an interactive weather dashboard."
    }
]